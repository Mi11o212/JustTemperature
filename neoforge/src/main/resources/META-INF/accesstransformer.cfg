public net.minecraft.world.effect.MobEffect <init>(Lnet/minecraft/world/effect/MobEffectCategory;I)V

# Thirst transformers
public net.minecraft.world.item.Item getPlayerPOVHitResult(Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/ClipContext$Fluid;)Lnet/minecraft/world/phys/BlockHitResult;
public net.minecraft.world.food.FoodData *

#Temperature transformers
public net.minecraft.client.gui.Gui POWDER_SNOW_OUTLINE_LOCATION
public net.minecraft.client.gui.Gui renderTextureOverlay(Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/resources/ResourceLocation;F)V

# DamageSources
public net.minecraft.world.damagesource.DamageSources *()

# Gui
public net.minecraft.client.gui.Gui$HeartType
public net.minecraft.client.gui.Gui GUI_ICONS_LOCATION

# MenuType registration
public net.minecraft.client.gui.screens.MenuScreens register(Lnet/minecraft/world/inventory/MenuType;Lnet/minecraft/client/gui/screens/MenuScreens$ScreenConstructor;)V

# Villages
public-f net.minecraft.world.level.levelgen.structure.pools.StructureTemplatePool rawTemplates
public net.minecraft.world.level.levelgen.structure.pools.StructureTemplatePool templates
public net.minecraft.world.entity.ai.village.poi.PoiTypes registerBlockStates(Lnet/minecraft/core/Holder;Ljava/util/Set;)V

public net.minecraft.world.level.block.entity.BlockEntityType <init>(Lnet/minecraft/world/level/block/entity/BlockEntityType$BlockEntitySupplier;Ljava/util/Set;)V

# Data gen
public net.minecraft.client.data.models.ItemModelGenerators *()
public net.minecraft.client.data.models.ItemModelGenerators$TrimMaterialData
public net.minecraft.client.data.models.ItemModelGenerators TRIM_MATERIAL_MODELS

public-f net.minecraft.world.item.crafting.RecipeManager RECIPE_PROPERTY_SETS
